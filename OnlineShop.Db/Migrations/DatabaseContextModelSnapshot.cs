// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Db;

#nullable disable

namespace OnlineShop.Db.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineShop.Db.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("OrderModelId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.CartModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.FavoriteModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductModelId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.OrderModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDataTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d184ce6e-4fba-424e-bbed-a6fa8cb1c5c0"),
                            Cost = 50000m,
                            Description = "Тут будет описание",
                            ImagePath = "/images/laptop1.jpg",
                            Name = "Ноутбук 1"
                        },
                        new
                        {
                            Id = new Guid("0a2ff2c1-fe38-41fa-8e6f-ee8670ed9e93"),
                            Cost = 88000m,
                            Description = "Тут будет описание",
                            ImagePath = "/images/laptop2.jpg",
                            Name = "Ноутбук 2"
                        },
                        new
                        {
                            Id = new Guid("252f4820-f2b1-4f6a-8a30-59b8dfd61dda"),
                            Cost = 95000m,
                            Description = "Тут будет описание",
                            ImagePath = "/images/laptop3.jpg",
                            Name = "Ноутбук 3"
                        },
                        new
                        {
                            Id = new Guid("f68ae5d3-000b-491f-8089-bd5c8b271bbc"),
                            Cost = 76000m,
                            Description = "Тут будет описание",
                            ImagePath = "/images/phone1.jpg",
                            Name = "Телефон 1"
                        },
                        new
                        {
                            Id = new Guid("1154b150-02e8-4b0e-bae9-4c87a6eb9f06"),
                            Cost = 40000m,
                            Description = "Тут будет описание",
                            ImagePath = "/images/phone2.jpg",
                            Name = "Телефон 2"
                        },
                        new
                        {
                            Id = new Guid("dbcba1c5-5ce1-470b-b4e1-c71072998c55"),
                            Cost = 57000m,
                            Description = "Тут будет описание",
                            ImagePath = "/images/phone3.jpg",
                            Name = "Телефон 3"
                        },
                        new
                        {
                            Id = new Guid("4878a10c-c2e1-4e65-a9e2-6664ce39dac0"),
                            Cost = 58000m,
                            Description = "Тут будет описание",
                            ImagePath = "/images/tablet1.jpg",
                            Name = "Планшет 1"
                        },
                        new
                        {
                            Id = new Guid("e550fdac-75ea-4322-8439-3d14e564ee08"),
                            Cost = 87000m,
                            Description = "Тут будет описание",
                            ImagePath = "/images/tablet2.jpg",
                            Name = "Планшет 2"
                        },
                        new
                        {
                            Id = new Guid("710588a8-5a47-4b1c-8e2b-99de8ae039e3"),
                            Cost = 87000m,
                            Description = "Тут будет описание",
                            ImagePath = "/images/tablet3.jpg",
                            Name = "Планшет 3"
                        });
                });

            modelBuilder.Entity("OnlineShop.Db.Models.UserOrderModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserOrderModel");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.CartItem", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.CartModel", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.Db.Models.OrderModel", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderModelId");

                    b.HasOne("OnlineShop.Db.Models.ProductModel", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.FavoriteModel", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.ProductModel", "ProductModel")
                        .WithMany()
                        .HasForeignKey("ProductModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductModel");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.OrderModel", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.UserOrderModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.CartModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.OrderModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.ProductModel", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
